- block:
  - name: btrfs | mount > btrfs partition on "{{ chroot }}"
    mount:
      src:    "{{ item.dev }}"
      path:   "{{ chroot }}"
      fstype: "{{ item.fstype }}"
      opts:   "{{ btrfs_options }}"
      state:  mounted
    with_items: "{{ fs }}"
    when:
      - item.path is defined
      - item.path == "/"
      - item.fstype == "btrfs"

  - name: btrfs | btrfs_subvolumes create btrfs subvolumes
    btrfs_subvolume:
      path:  "{{ chroot + '/' + item.name }}"
      state: present
    with_items: "{{ btrfs }}"

  - name: btrfs | mount > unmount btrfs partition
    mount:
      path:   "{{ chroot }}"
      state:  absent

  - name: btrfs | mount > root btrfs subvolume
    mount:
      path:   "{{ chroot }}"
      src:    "{{ item.dev }}"
      fstype: "{{ item.fstype }}"
      opts:   "{{ btrfs_options }},subvol=@"
      state:  mounted
    with_items: "{{ fs }}"
    when:
      - item.path is defined
      - item.path == "/"
      - item.fstype == "btrfs"

  - name: btrfs | file > create mount point directories
    file:
      # if item.path not present then use item.name as path
      # regex_replace remove @ from item.name
      path:  "{{ chroot + '/@' + (item.path if item.path is defined
                            else ('/' + (item.name | regex_replace('^@', '')))) }}"
      state: directory
    with_items: "{{ btrfs }}"

  - name: btrfs | mount > 1st lvl of btrfs subvolumes
    mount:
      path:  "{{ chroot + (item.1.path if item.1.path is defined
                     else ('/' + (item.1.name | regex_replace('^@', '')))) }}"
      src:    "{{ item.0.dev }}"
      fstype: btrfs
      opts:   "{{ ((item.1.mnt_opts + ',') if item.1.mnt_opts is defined else 'defaults,noatime,nodiratime,') + btrfs_options }},subvol={{ item.1.name }}"
      state:  mounted
    when:
      - item.0.fstype == "btrfs"
      - item.0.path   == "/"
      - item.1.name   not in ["@", "@packages"]
    with_nested:
      - "{{ fs }}"
      - "{{ btrfs }}"

  - name: btrfs | mount > 2nd level of btrfs subvolumes
    mount:
      path:  "{{ chroot + (item.1.path if item.1.path is defined
                     else ('/' + (item.1.name | regex_replace('^@', '')))) }}"
      src:    "{{ item.0.dev }}"
      fstype: btrfs
      opts:   "{{ ((item.1.mnt_opts + ',') if item.1.mnt_opts is defined else '') + btrfs_options }},subvol={{ item.1.name }}"
      state:  mounted
    when:
      - item.0.fstype == "btrfs"
      - item.0.path   == "/"
      - item.1.name   in ["@packages"]
    with_nested:
      - "{{ fs }}"
      - "{{ btrfs }}"

  - name: btrfs | systemd > reload systemd daemon to source new fstab
    systemd:
      daemon_reload: true

  ## disable COW on subvolumes @log or on mount point /var/log ?
  - name: btrfs | file > disable copy-on-write on specified subvolumes
    file:
      # path:  "{{ chroot + '/' + (item.name | regex_replace('^@', '')) }}"
      path:  "{{ chroot + (item.path if item.path is defined
                     else ('/' + (item.name | regex_replace('^@', '')))) }}"
      attributes: +C
    when:
      - item.cow is defined
      - item.cow is false
    with_items: "{{ btrfs }}"

  - name: file > change /tmp permissions
    file:
      path: "{{ chroot + (item.path if item.path is defined
                    else ('/' + (item.name | regex_replace('^@', '')))) }}"
      mode: "1777"
    when: item.name in ["@tmp","@var_tmp"]
    with_items: "{{ btrfs }}"

  when: btrfs_enable
  tags: btrfs
